### Try to view all users when not authenticated
GET {{baseUrl}}/users
### Login the manager with a request variable (ensure that you have "registered" this user first via auths.http)
# @name manager
POST {{baseUrl}}/auths/login
Content-Type: application/json

{
  "username":"manager",
  "password":"manager"
}

> {%
 client.global.set("managerToken", response.body.token);
 %}

### Try to view all users with manager (who does not have yet the admin role)
GET {{baseUrl}}/users
Authorization: {{managerToken}}

### Try to update the manager username to supermanager
PUT {{baseUrl}}/users/manager
Content-Type: application/json
Authorization: {{managerToken}}

{
  "role":"admin"
}

### Update the manager role to admin
PUT {{baseUrl}}/users/manager
Content-Type: application/json
Authorization: {{managerToken}}

{
  "role":"admin"
}


### View all users with manager having the admin role
GET {{baseUrl}}/users
Authorization: {{managerToken}}

### Login the dev with a request variable (ensure that you have "registered" this user first via auths.http)
# @name dev
POST {{baseUrl}}/auths/login
Content-Type: application/json

{
  "username":"dev",
  "password":"dev"
}

> {%
 client.global.set("devToken", response.body.token);
 %}
### Try to view all users with dev having the regular role
GET {{baseUrl}}/users
Authorization: {{devToken}}






